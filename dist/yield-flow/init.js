"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerClasses = registerClasses;
const curves = require("./curves/structs");
const dsui = require("./dsui/structs");
const hive = require("./hive/structs");
const honey = require("./honey/structs");
const yieldFlow = require("./yield-flow/structs");
function registerClasses(loader) {
    loader.register(honey.Consumption);
    loader.register(honey.ConsumptionCondition);
    loader.register(honey.HONEY);
    loader.register(honey.HoneyTransferred);
    loader.register(honey.HoneyUnwrappedToCoin);
    loader.register(hive.HIVE);
    loader.register(curves.Curved);
    loader.register(curves.Stable);
    loader.register(curves.Weighted);
    loader.register(yieldFlow.DecimalPrecisionForCoinTypesWhitelisted);
    loader.register(yieldFlow.DefaultFeeInfo);
    loader.register(yieldFlow.DefaultFeeSet);
    loader.register(yieldFlow.DeployerCap);
    loader.register(yieldFlow.DragonDaoCapability);
    loader.register(yieldFlow.DragonFoodCapability);
    loader.register(yieldFlow.FeeCollectedForCoin);
    loader.register(yieldFlow.FeeCollector);
    loader.register(yieldFlow.FeeDistributionPctUpdated);
    loader.register(yieldFlow.FeeExtractedForCoin);
    loader.register(yieldFlow.FeeInfo);
    loader.register(yieldFlow.HiddenWorldCapability);
    loader.register(yieldFlow.MasterAccessKey);
    loader.register(yieldFlow.NewFeeCollectorKrafted);
    loader.register(yieldFlow.PoolFlow);
    loader.register(yieldFlow.PoolsConfig);
    loader.register(yieldFlow.StableIdentifierAdded);
    loader.register(yieldFlow.StableIdentifierRemoved);
    loader.register(yieldFlow.ThreeAmmFlowAccess);
    loader.register(yieldFlow.TreasuryResourcesDistributed);
    loader.register(yieldFlow.TwoAmmFlowAccess);
    loader.register(yieldFlow.VoteByVestedTokensCapability);
    loader.register(yieldFlow.YieldFlow);
    loader.register(dsui.DSUI);
}
